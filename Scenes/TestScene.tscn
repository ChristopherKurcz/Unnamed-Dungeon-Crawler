[gd_scene load_steps=70 format=2]

[ext_resource path="res://Materials/BasicFloor.tres" type="Material" id=1]
[ext_resource path="res://Assets/Enemies/Gnom.png" type="Texture" id=2]
[ext_resource path="res://Assets/Rooms/WallTile1.png" type="Texture" id=3]
[ext_resource path="res://icon.png" type="Texture" id=4]
[ext_resource path="res://Assets/PurpleBricks/2.png" type="Texture" id=5]
[ext_resource path="res://Assets/PurpleBricks/9.png" type="Texture" id=6]
[ext_resource path="res://Assets/PurpleBricks/11.png" type="Texture" id=7]
[ext_resource path="res://Assets/PurpleBricks/14.png" type="Texture" id=8]
[ext_resource path="res://Assets/PurpleBricks/16.png" type="Texture" id=9]
[ext_resource path="res://Assets/PurpleBricks/6.png" type="Texture" id=10]
[ext_resource path="res://Assets/PurpleBricks/4.png" type="Texture" id=11]
[ext_resource path="res://Assets/PurpleBricks/1.png" type="Texture" id=12]
[ext_resource path="res://Assets/PurpleBricks/7.png" type="Texture" id=13]
[ext_resource path="res://Assets/PurpleBricks/15.png" type="Texture" id=14]
[ext_resource path="res://Assets/PurpleBricks/13.png" type="Texture" id=15]
[ext_resource path="res://Assets/PurpleBricks/8.png" type="Texture" id=16]
[ext_resource path="res://Assets/PurpleBricks/12.png" type="Texture" id=17]
[ext_resource path="res://Assets/PurpleBricks/10.png" type="Texture" id=18]
[ext_resource path="res://Assets/PurpleBricks/5.png" type="Texture" id=19]
[ext_resource path="res://Assets/PurpleBricks/3.png" type="Texture" id=20]
[ext_resource path="res://Scripts/TestScene.gd" type="Script" id=21]
[ext_resource path="res://Scenes/Player/PlayerGhost.tscn" type="PackedScene" id=22]

[sub_resource type="Environment" id=1]
background_mode = 1
ambient_light_color = Color( 1, 1, 1, 1 )
ambient_light_sky_contribution = 0.0

[sub_resource type="SpatialMaterial" id=2]
flags_world_triplanar = true
albedo_texture = ExtResource( 9 )
uv1_triplanar = true

[sub_resource type="CubeMesh" id=3]
material = SubResource( 2 )
size = Vector3( 1, 1, 1 )

[sub_resource type="SpatialMaterial" id=4]
flags_world_triplanar = true
albedo_texture = ExtResource( 10 )
uv1_triplanar = true

[sub_resource type="CubeMesh" id=5]
material = SubResource( 4 )
size = Vector3( 1, 1, 1 )

[sub_resource type="SpatialMaterial" id=6]
flags_world_triplanar = true
albedo_texture = ExtResource( 17 )
uv1_triplanar = true

[sub_resource type="CubeMesh" id=7]
material = SubResource( 6 )
size = Vector3( 1, 1, 1 )

[sub_resource type="SpatialMaterial" id=8]
flags_world_triplanar = true
albedo_texture = ExtResource( 11 )
uv1_triplanar = true

[sub_resource type="CubeMesh" id=9]
material = SubResource( 8 )
size = Vector3( 1, 0.5, 0.5 )

[sub_resource type="SpatialMaterial" id=10]
flags_world_triplanar = true
albedo_texture = ExtResource( 5 )
uv1_triplanar = true

[sub_resource type="CubeMesh" id=11]
material = SubResource( 10 )
size = Vector3( 0.5, 0.5, 0.5 )

[sub_resource type="SpatialMaterial" id=12]
flags_world_triplanar = true
albedo_texture = ExtResource( 12 )
uv1_triplanar = true

[sub_resource type="CubeMesh" id=13]
material = SubResource( 12 )
size = Vector3( 0.5, 0.5, 0.5 )

[sub_resource type="SpatialMaterial" id=14]
flags_world_triplanar = true
albedo_texture = ExtResource( 20 )
uv1_triplanar = true

[sub_resource type="CubeMesh" id=15]
material = SubResource( 14 )
size = Vector3( 1, 0.5, 0.5 )

[sub_resource type="SpatialMaterial" id=16]
flags_world_triplanar = true
albedo_texture = ExtResource( 19 )
uv1_triplanar = true

[sub_resource type="CubeMesh" id=17]
material = SubResource( 16 )
size = Vector3( 1, 1, 1 )

[sub_resource type="SpatialMaterial" id=18]
flags_world_triplanar = true
albedo_texture = ExtResource( 13 )
uv1_triplanar = true

[sub_resource type="CubeMesh" id=19]
material = SubResource( 18 )
size = Vector3( 1, 1, 1 )

[sub_resource type="SpatialMaterial" id=20]
flags_world_triplanar = true
albedo_texture = ExtResource( 16 )
uv1_triplanar = true

[sub_resource type="CubeMesh" id=21]
material = SubResource( 20 )
size = Vector3( 1, 0.5, 0.5 )

[sub_resource type="SpatialMaterial" id=22]
flags_world_triplanar = true
albedo_texture = ExtResource( 6 )
uv1_triplanar = true

[sub_resource type="CubeMesh" id=23]
material = SubResource( 22 )
size = Vector3( 0.5, 0.5, 0.5 )

[sub_resource type="SpatialMaterial" id=24]
flags_world_triplanar = true
albedo_texture = ExtResource( 18 )
uv1_triplanar = true

[sub_resource type="CubeMesh" id=25]
material = SubResource( 24 )
size = Vector3( 0.5, 0.5, 0.5 )

[sub_resource type="SpatialMaterial" id=26]
flags_world_triplanar = true
albedo_texture = ExtResource( 7 )
uv1_triplanar = true

[sub_resource type="CubeMesh" id=27]
material = SubResource( 26 )
size = Vector3( 1, 1, 1 )

[sub_resource type="SpatialMaterial" id=28]
flags_world_triplanar = true
albedo_texture = ExtResource( 15 )
uv1_triplanar = true

[sub_resource type="CubeMesh" id=29]
material = SubResource( 28 )
size = Vector3( 1, 0.5, 0.5 )

[sub_resource type="SpatialMaterial" id=30]
flags_world_triplanar = true
albedo_texture = ExtResource( 8 )
uv1_triplanar = true

[sub_resource type="CubeMesh" id=31]
material = SubResource( 30 )
size = Vector3( 0.5, 0.5, 0.5 )

[sub_resource type="SpatialMaterial" id=32]
flags_world_triplanar = true
albedo_texture = ExtResource( 14 )
uv1_triplanar = true

[sub_resource type="CubeMesh" id=33]
material = SubResource( 32 )
size = Vector3( 0.5, 0.5, 0.5 )

[sub_resource type="CubeMesh" id=34]
material = ExtResource( 1 )

[sub_resource type="BoxShape" id=35]

[sub_resource type="SpatialMaterial" id=36]
flags_world_triplanar = true
albedo_texture = ExtResource( 3 )
uv1_triplanar = true

[sub_resource type="CubeMesh" id=37]
material = SubResource( 36 )

[sub_resource type="Shader" id=38]
code = "shader_type canvas_item;
//https://lospec.com/palette-list/luxa
uniform vec4 color_1 = vec4(.18, .18, .36, 1.0);
uniform vec4 color_2 = vec4(.31, .31, .43, 1.0);
uniform vec4 color_3 = vec4(.75, .75, .90, 1.0);
uniform vec4 color_4 = vec4(.90, .90, 1.0, 1.0);

uniform vec4 grey_1 = vec4(.000, .000, .000, 1.0);
uniform vec4 grey_2 = vec4(.282, .282, .282, 1.0);
uniform vec4 grey_3 = vec4(.639, .639, .639, 1.0);
uniform vec4 grey_4 = vec4(1.0, 1.0, 1.0, 1.0);

void fragment() {

	vec4 colors[4] = {color_1, color_2, color_3, color_4};
	vec4 greys[4] = {grey_1, grey_2, grey_3, grey_4};
	float min_diff = -1.0;
	vec4 min_color = vec4(0.0, 0.0, 0.0, 1.0);

	vec2 uv = SCREEN_UV;

	vec4 temp = textureLod(SCREEN_TEXTURE, uv, 0.0);

	min_diff = 1000.0;
	for (int i = 0; i < greys.length(); i++) {

		float curr_dist = distance(greys[i], temp);
		if (curr_dist < min_diff) {
			min_diff = curr_dist;
			min_color = colors[i];
		}
	}

	COLOR.rgb = min_color.rgb;
}"

[sub_resource type="ShaderMaterial" id=39]
shader = SubResource( 38 )
shader_param/color_1 = Plane( 0.18, 0.18, 0.36, 1 )
shader_param/color_2 = Plane( 0.31, 0.31, 0.43, 1 )
shader_param/color_3 = Plane( 0.75, 0.75, 0.9, 1 )
shader_param/color_4 = Plane( 0.9, 0.9, 1, 1 )
shader_param/grey_1 = Plane( 0, 0, 0, 1 )
shader_param/grey_2 = Plane( 0.282, 0.282, 0.282, 1 )
shader_param/grey_3 = Plane( 0.639, 0.639, 0.639, 1 )
shader_param/grey_4 = Plane( 1, 1, 1, 1 )

[sub_resource type="Shader" id=40]
code = "shader_type canvas_item;
//https://lospec.com/palette-list/royal4
uniform vec4 color_1 = vec4(.322, .071, .588, 1.0);
uniform vec4 color_2 = vec4(.541, .122, .675, 1.0);
uniform vec4 color_3 = vec4(.831, .525, .290, 1.0);
uniform vec4 color_4 = vec4(.922, .859, .369, 1.0);

uniform vec4 grey_1 = vec4(.000, .000, .000, 1.0);
uniform vec4 grey_2 = vec4(.282, .282, .282, 1.0);
uniform vec4 grey_3 = vec4(.639, .639, .639, 1.0);
uniform vec4 grey_4 = vec4(1.0, 1.0, 1.0, 1.0);

void fragment() {

	vec4 colors[4] = {color_1, color_2, color_3, color_4};
	vec4 greys[4] = {grey_1, grey_2, grey_3, grey_4};
	float min_diff = -1.0;
	vec4 min_color = vec4(0.0, 0.0, 0.0, 1.0);

	vec2 uv = SCREEN_UV;

	vec4 temp = textureLod(SCREEN_TEXTURE, uv, 0.0);

	min_diff = 1000.0;
	for (int i = 0; i < greys.length(); i++) {

		float curr_dist = distance(greys[i], temp);
		if (curr_dist < min_diff) {
			min_diff = curr_dist;
			min_color = colors[i];
		}
	}

	COLOR.rgb = min_color.rgb;
}"

[sub_resource type="ShaderMaterial" id=41]
shader = SubResource( 40 )
shader_param/color_1 = Plane( 0.322, 0.071, 0.588, 1 )
shader_param/color_2 = Plane( 0.541, 0.122, 0.675, 1 )
shader_param/color_3 = Plane( 0.831, 0.525, 0.29, 1 )
shader_param/color_4 = Plane( 0.922, 0.859, 0.369, 1 )
shader_param/grey_1 = Plane( 0, 0, 0, 1 )
shader_param/grey_2 = Plane( 0.282, 0.282, 0.282, 1 )
shader_param/grey_3 = Plane( 0.639, 0.639, 0.639, 1 )
shader_param/grey_4 = Plane( 1, 1, 1, 1 )

[sub_resource type="Shader" id=42]
code = "shader_type canvas_item;
//chill greyscale
uniform vec4 color_1 = vec4(.2, .2, .2, 1.0);
uniform vec4 color_2 = vec4(.4, .4, .4, 1.0);
uniform vec4 color_3 = vec4(.6, .6, .6, 1.0);
uniform vec4 color_4 = vec4(.8, .8, .8, 1.0);

uniform vec4 grey_1 = vec4(.000, .000, .000, 1.0);
uniform vec4 grey_2 = vec4(.282, .282, .282, 1.0);
uniform vec4 grey_3 = vec4(.639, .639, .639, 1.0);
uniform vec4 grey_4 = vec4(1.0, 1.0, 1.0, 1.0);

void fragment() {

	vec4 colors[4] = {color_1, color_2, color_3, color_4};
	vec4 greys[4] = {grey_1, grey_2, grey_3, grey_4};
	float min_diff = -1.0;
	vec4 min_color = vec4(0.0, 0.0, 0.0, 1.0);

	vec2 uv = SCREEN_UV;

	vec4 temp = textureLod(SCREEN_TEXTURE, uv, 0.0);

	min_diff = 1000.0;
	for (int i = 0; i < greys.length(); i++) {

		float curr_dist = distance(greys[i], temp);
		if (curr_dist < min_diff) {
			min_diff = curr_dist;
			min_color = colors[i];
		}
	}

	COLOR.rgb = min_color.rgb;
}"

[sub_resource type="ShaderMaterial" id=43]
shader = SubResource( 42 )
shader_param/color_1 = Plane( 0.2, 0.2, 0.2, 1 )
shader_param/color_2 = Plane( 0.4, 0.4, 0.4, 1 )
shader_param/color_3 = Plane( 0.6, 0.6, 0.6, 1 )
shader_param/color_4 = Plane( 0.8, 0.8, 0.8, 1 )
shader_param/grey_1 = Plane( 0, 0, 0, 1 )
shader_param/grey_2 = Plane( 0.282, 0.282, 0.282, 1 )
shader_param/grey_3 = Plane( 0.639, 0.639, 0.639, 1 )
shader_param/grey_4 = Plane( 1, 1, 1, 1 )

[sub_resource type="Shader" id=44]
code = "shader_type canvas_item;
//https://lospec.com/palette-list/ice-cream-gb
uniform vec4 color_1 = vec4(.486, .247, .345, 1.0);
uniform vec4 color_2 = vec4(.922, .420, .435, 1.0);
uniform vec4 color_3 = vec4(.976, .659, .459, 1.0);
uniform vec4 color_4 = vec4(1.00, .965, .827, 1.0);

uniform vec4 grey_1 = vec4(.000, .000, .000, 1.0);
uniform vec4 grey_2 = vec4(.282, .282, .282, 1.0);
uniform vec4 grey_3 = vec4(.639, .639, .639, 1.0);
uniform vec4 grey_4 = vec4(1.0, 1.0, 1.0, 1.0);

void fragment() {

	vec4 colors[4] = {color_1, color_2, color_3, color_4};
	vec4 greys[4] = {grey_1, grey_2, grey_3, grey_4};
	float min_diff = -1.0;
	vec4 min_color = vec4(0.0, 0.0, 0.0, 1.0);

	vec2 uv = SCREEN_UV;

	vec4 temp = textureLod(SCREEN_TEXTURE, uv, 0.0);

	min_diff = 1000.0;
	for (int i = 0; i < greys.length(); i++) {

		float curr_dist = distance(greys[i], temp);
		if (curr_dist < min_diff) {
			min_diff = curr_dist;
			min_color = colors[i];
		}
	}

	COLOR.rgb = min_color.rgb;
}"

[sub_resource type="ShaderMaterial" id=45]
shader = SubResource( 44 )
shader_param/color_1 = Plane( 0.486, 0.247, 0.345, 1 )
shader_param/color_2 = Plane( 0.922, 0.42, 0.435, 1 )
shader_param/color_3 = Plane( 0.976, 0.659, 0.459, 1 )
shader_param/color_4 = Plane( 1, 0.965, 0.827, 1 )
shader_param/grey_1 = Plane( 0, 0, 0, 1 )
shader_param/grey_2 = Plane( 0.282, 0.282, 0.282, 1 )
shader_param/grey_3 = Plane( 0.639, 0.639, 0.639, 1 )
shader_param/grey_4 = Plane( 1, 1, 1, 1 )

[sub_resource type="Shader" id=46]
code = "shader_type canvas_item;
//https://lospec.com/palette-list/kirokaze-gameboy
uniform vec4 color_1 = vec4(.200, .173, .314, 1.0);
uniform vec4 color_2 = vec4(.275, .529, .561, 1.0);
uniform vec4 color_3 = vec4(.580, .890, .267, 1.0);
uniform vec4 color_4 = vec4(.886, .953, .894, 1.0);

uniform vec4 grey_1 = vec4(.000, .000, .000, 1.0);
uniform vec4 grey_2 = vec4(.282, .282, .282, 1.0);
uniform vec4 grey_3 = vec4(.639, .639, .639, 1.0);
uniform vec4 grey_4 = vec4(1.0, 1.0, 1.0, 1.0);

void fragment() {

	vec4 colors[4] = {color_1, color_2, color_3, color_4};
	vec4 greys[4] = {grey_1, grey_2, grey_3, grey_4};
	float min_diff = -1.0;
	vec4 min_color = vec4(0.0, 0.0, 0.0, 1.0);

	vec2 uv = SCREEN_UV;

	vec4 temp = textureLod(SCREEN_TEXTURE, uv, 0.0);

	min_diff = 1000.0;
	for (int i = 0; i < greys.length(); i++) {

		float curr_dist = distance(greys[i], temp);
		if (curr_dist < min_diff) {
			min_diff = curr_dist;
			min_color = colors[i];
		}
	}

	COLOR.rgb = min_color.rgb;
}"

[sub_resource type="ShaderMaterial" id=47]
shader = SubResource( 46 )
shader_param/color_1 = Plane( 0.2, 0.173, 0.314, 1 )
shader_param/color_2 = Plane( 0.275, 0.529, 0.561, 1 )
shader_param/color_3 = Plane( 0.58, 0.89, 0.267, 1 )
shader_param/color_4 = Plane( 0.886, 0.953, 0.894, 1 )
shader_param/grey_1 = Plane( 0, 0, 0, 1 )
shader_param/grey_2 = Plane( 0.282, 0.282, 0.282, 1 )
shader_param/grey_3 = Plane( 0.639, 0.639, 0.639, 1 )
shader_param/grey_4 = Plane( 1, 1, 1, 1 )

[node name="TestScene" type="Spatial"]
script = ExtResource( 21 )

[node name="WorldEnvironment" type="WorldEnvironment" parent="."]
environment = SubResource( 1 )

[node name="Camera" type="Camera" parent="."]
transform = Transform( 1, 0, 0, 0, 0.766044, 0.642788, 0, -0.642788, 0.766044, 0, 8, 9 )
fov = 55.0

[node name="WallConcept" type="Spatial" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, -6 )
visible = false

[node name="17" type="MeshInstance" parent="WallConcept"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 3.475, 0.475, -1.475 )
mesh = SubResource( 3 )
material/0 = null

[node name="18" type="MeshInstance" parent="WallConcept"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 6.5, 0.5, -1.5 )
mesh = SubResource( 5 )
material/0 = null

[node name="19" type="MeshInstance" parent="WallConcept"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 4.475, 0.475, -1.475 )
mesh = SubResource( 7 )
material/0 = null

[node name="23" type="MeshInstance" parent="WallConcept"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 5.5, 0.25, -1.25 )
mesh = SubResource( 9 )
material/0 = null

[node name="25" type="MeshInstance" parent="WallConcept"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 6.5, 1.25, -1.25 )
mesh = SubResource( 9 )
material/0 = null

[node name="20" type="MeshInstance" parent="WallConcept"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 5.25, 0.75, -1.25 )
mesh = SubResource( 11 )
material/0 = null

[node name="24" type="MeshInstance" parent="WallConcept"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 5.75, 0.75, -1.25 )
mesh = SubResource( 11 )
material/0 = null

[node name="Test Bricks" type="Spatial" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -4, 0, -13 )
visible = false

[node name="1" type="MeshInstance" parent="Test Bricks"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0.25, 0.25, 0.25 )
mesh = SubResource( 13 )
material/0 = null

[node name="2" type="MeshInstance" parent="Test Bricks"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0.25, 0.25, -1.75 )
mesh = SubResource( 11 )
material/0 = null

[node name="3" type="MeshInstance" parent="Test Bricks"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 1.5, 0.25, 0.25 )
mesh = SubResource( 15 )
material/0 = null

[node name="4" type="MeshInstance" parent="Test Bricks"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 1.5, 0.25, -1.75 )
mesh = SubResource( 9 )
material/0 = null

[node name="5" type="MeshInstance" parent="Test Bricks"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 2.5, 0.5, 0.5 )
mesh = SubResource( 17 )
material/0 = null

[node name="6" type="MeshInstance" parent="Test Bricks"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 2.5, 0.5, -1.5 )
mesh = SubResource( 5 )
material/0 = null

[node name="7" type="MeshInstance" parent="Test Bricks"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 4.5, 0.5, 0.5 )
mesh = SubResource( 19 )
material/0 = null

[node name="8" type="MeshInstance" parent="Test Bricks"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 5.5, 0.25, 0.25 )
mesh = SubResource( 21 )
material/0 = null

[node name="9" type="MeshInstance" parent="Test Bricks"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 6.25, 0.25, 0.25 )
mesh = SubResource( 23 )
material/0 = null

[node name="10" type="MeshInstance" parent="Test Bricks"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 6.25, 0.25, -3.75 )
mesh = SubResource( 25 )
material/0 = null

[node name="11" type="MeshInstance" parent="Test Bricks"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 7.5, 0.5, 0.5 )
mesh = SubResource( 27 )
material/0 = null

[node name="12" type="MeshInstance" parent="Test Bricks"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 4.5, 0.5, -1.5 )
mesh = SubResource( 7 )
material/0 = null

[node name="13" type="MeshInstance" parent="Test Bricks"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 5.5, 0.25, -1.75 )
mesh = SubResource( 29 )
material/0 = null

[node name="14" type="MeshInstance" parent="Test Bricks"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 6.25, 0.25, -1.75 )
mesh = SubResource( 31 )
material/0 = null

[node name="15" type="MeshInstance" parent="Test Bricks"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 6.25, 0.25, -5.75 )
mesh = SubResource( 33 )
material/0 = null

[node name="16" type="MeshInstance" parent="Test Bricks"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 7.5, 0.5, -1.5 )
mesh = SubResource( 3 )
material/0 = null

[node name="Room1" type="Spatial" parent="."]

[node name="Platform" type="StaticBody" parent="Room1"]
transform = Transform( 7, 0, 0, 0, 1, 0, 0, 0, 5, 0, -1, 0 )
__meta__ = {
"_edit_group_": true
}

[node name="MeshInstance" type="MeshInstance" parent="Room1/Platform"]
mesh = SubResource( 34 )
material/0 = null

[node name="CollisionShape" type="CollisionShape" parent="Room1/Platform"]
shape = SubResource( 35 )

[node name="Wall1" type="StaticBody" parent="Room1" groups=["Wall"]]
transform = Transform( 7, 0, 0, 0, 1, 0, 0, 0, 0.5, 0, 1, -4.5 )
__meta__ = {
"_edit_group_": true
}

[node name="MeshInstance" type="MeshInstance" parent="Room1/Wall1"]
mesh = SubResource( 37 )
material/0 = null

[node name="CollisionShape" type="CollisionShape" parent="Room1/Wall1"]
shape = SubResource( 35 )

[node name="Wall2" type="StaticBody" parent="Room1" groups=["Wall"]]
transform = Transform( 0.5, 0, 0, 0, 1, 0, 0, 0, 5, -6.5, 1, 0 )
__meta__ = {
"_edit_group_": true
}

[node name="MeshInstance" type="MeshInstance" parent="Room1/Wall2"]
mesh = SubResource( 37 )
material/0 = null

[node name="CollisionShape" type="CollisionShape" parent="Room1/Wall2"]
shape = SubResource( 35 )

[node name="Wall3" type="StaticBody" parent="Room1" groups=["Wall"]]
transform = Transform( 0.5, 0, 0, 0, 1, 0, 0, 0, 5, 6.5, 1, 0 )
__meta__ = {
"_edit_group_": true
}

[node name="MeshInstance" type="MeshInstance" parent="Room1/Wall3"]
mesh = SubResource( 37 )
material/0 = null

[node name="CollisionShape" type="CollisionShape" parent="Room1/Wall3"]
shape = SubResource( 35 )

[node name="Wall4" type="StaticBody" parent="Room1" groups=["Wall"]]
transform = Transform( 7, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 6 )
__meta__ = {
"_edit_group_": true
}

[node name="CollisionShape" type="CollisionShape" parent="Room1/Wall4"]
shape = SubResource( 35 )

[node name="PlayerGhost" parent="." instance=ExtResource( 22 )]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -2.68884, 0.5, 0 )

[node name="Palettes" type="Node2D" parent="."]

[node name="Sprite" type="Sprite" parent="Palettes"]
visible = false
material = SubResource( 39 )
position = Vector2( 960, 540 )
scale = Vector2( 31, 18 )
texture = ExtResource( 4 )

[node name="Sprite2" type="Sprite" parent="Palettes"]
visible = false
material = SubResource( 41 )
position = Vector2( 960, 540 )
scale = Vector2( 31, 18 )
texture = ExtResource( 4 )

[node name="Sprite3" type="Sprite" parent="Palettes"]
material = SubResource( 43 )
position = Vector2( 960, 540 )
scale = Vector2( 31, 18 )
texture = ExtResource( 4 )

[node name="Sprite4" type="Sprite" parent="Palettes"]
visible = false
material = SubResource( 45 )
position = Vector2( 960, 540 )
scale = Vector2( 31, 18 )
texture = ExtResource( 4 )

[node name="Sprite5" type="Sprite" parent="Palettes"]
visible = false
material = SubResource( 47 )
position = Vector2( 960, 540 )
scale = Vector2( 31, 18 )
texture = ExtResource( 4 )

[node name="Sprite3D" type="Sprite3D" parent="."]
transform = Transform( 6, 0, 0, 0, 6, 0, 0, 0, 1, 1.5, 0.5, 0.5 )
texture = ExtResource( 2 )
